public abstract interface class net/navatwo/kaff4/model/Aff4Image : java/io/Closeable {
	public abstract fun getAff4Model ()Lnet/navatwo/kaff4/model/Aff4Model;
	public abstract fun getContainers ()Ljava/util/List;
	public abstract fun getStreamOpener ()Lnet/navatwo/kaff4/model/Aff4StreamOpener;
}

public final class net/navatwo/kaff4/model/Aff4ImageContext {
	public fun <init> (Ljava/lang/String;Lnet/navatwo/kaff4/rdf/RdfExecutor;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lnet/navatwo/kaff4/rdf/RdfExecutor;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Lnet/navatwo/kaff4/rdf/RdfExecutor;Ljava/util/List;)Lnet/navatwo/kaff4/model/Aff4ImageContext;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/Aff4ImageContext;Ljava/lang/String;Lnet/navatwo/kaff4/rdf/RdfExecutor;Ljava/util/List;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/Aff4ImageContext;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContainers ()Ljava/util/List;
	public final fun getImageName ()Ljava/lang/String;
	public final fun getRdfExecutor ()Lnet/navatwo/kaff4/rdf/RdfExecutor;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class net/navatwo/kaff4/model/Aff4ImageOpener {
	public abstract fun manualOpen (Lokio/FileSystem;Lokio/Path;)Lnet/navatwo/kaff4/model/Aff4ImageOpener$Aff4ImageWithResources;
	public abstract fun open (Lokio/FileSystem;Lokio/Path;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class net/navatwo/kaff4/model/Aff4ImageOpener$Aff4ImageWithResources : java/lang/AutoCloseable {
	public fun <init> (Lnet/navatwo/kaff4/model/Aff4Image;Ljava/lang/AutoCloseable;)V
	public fun close ()V
	public final fun getAff4Image ()Lnet/navatwo/kaff4/model/Aff4Image;
}

public final class net/navatwo/kaff4/model/Aff4ImageOpener$DefaultImpls {
	public static fun open (Lnet/navatwo/kaff4/model/Aff4ImageOpener;Lokio/FileSystem;Lokio/Path;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public abstract interface class net/navatwo/kaff4/model/Aff4Model : java/io/Closeable {
	public abstract fun get (Lorg/eclipse/rdf4j/model/IRI;Lkotlin/reflect/KClass;)Lnet/navatwo/kaff4/model/rdf/Aff4RdfModel;
	public abstract fun getContainerContext ()Lnet/navatwo/kaff4/model/Aff4ImageContext;
	public abstract fun query (Lkotlin/reflect/KClass;)Lkotlin/sequences/Sequence;
	public abstract fun querySubjectStartsWith (Ljava/lang/String;Lkotlin/reflect/KClass;)Lkotlin/sequences/Sequence;
}

public abstract interface class net/navatwo/kaff4/model/Aff4Model$Loader {
	public abstract fun load (Lnet/navatwo/kaff4/model/Aff4ImageContext;)Lnet/navatwo/kaff4/model/Aff4Model;
}

public abstract interface class net/navatwo/kaff4/model/Aff4StreamOpener : java/io/Closeable {
	public abstract fun openStream (Lorg/eclipse/rdf4j/model/IRI;)Lnet/navatwo/kaff4/io/AutoCloseableSourceProvider;
}

public abstract interface class net/navatwo/kaff4/model/Aff4StreamSourceProvider : net/navatwo/kaff4/io/SourceProvider {
	public abstract fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public abstract fun getSize ()J
}

public final class net/navatwo/kaff4/model/Aff4StreamSourceProvider$DefaultImpls {
	public static fun source (Lnet/navatwo/kaff4/model/Aff4StreamSourceProvider;Lokio/Timeout;)Lokio/Source;
	public static fun transform (Lnet/navatwo/kaff4/model/Aff4StreamSourceProvider;Lnet/navatwo/kaff4/io/SourceProvider$Transformer;)Lnet/navatwo/kaff4/io/SourceProvider;
}

public abstract interface class net/navatwo/kaff4/model/Aff4StreamSourceProvider$Loader {
	public abstract fun load (Lnet/navatwo/kaff4/model/rdf/Aff4RdfModel;)Lnet/navatwo/kaff4/model/Aff4StreamSourceProvider;
}

public abstract interface class net/navatwo/kaff4/model/VerifiableStreamProvider {
	public abstract fun verify (Lnet/navatwo/kaff4/model/Aff4Model;Lokio/Timeout;)Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result;
}

public final class net/navatwo/kaff4/model/VerifiableStreamProvider$DefaultImpls {
	public static synthetic fun verify$default (Lnet/navatwo/kaff4/model/VerifiableStreamProvider;Lnet/navatwo/kaff4/model/Aff4Model;Lokio/Timeout;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result;
}

public abstract interface class net/navatwo/kaff4/model/VerifiableStreamProvider$Result {
	public static final field Companion Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result$Companion;
	public abstract fun getFailedHashes ()Ljava/util/Collection;
}

public final class net/navatwo/kaff4/model/VerifiableStreamProvider$Result$Companion {
	public final fun fromFailedHashes (Ljava/util/Collection;)Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result;
}

public final class net/navatwo/kaff4/model/VerifiableStreamProvider$Result$Failed : net/navatwo/kaff4/model/VerifiableStreamProvider$Result {
	public fun <init> (Ljava/util/Collection;)V
	public final fun component1 ()Ljava/util/Collection;
	public final fun copy (Ljava/util/Collection;)Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result$Failed;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result$Failed;Ljava/util/Collection;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result$Failed;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFailedHashes ()Ljava/util/Collection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/VerifiableStreamProvider$Result$FailedHash {
	public fun <init> (Lnet/navatwo/kaff4/model/rdf/Aff4RdfModel;Ljava/lang/String;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;)V
	public fun <init> (Lnet/navatwo/kaff4/model/rdf/Aff4RdfModel;Ljava/lang/String;Lnet/navatwo/kaff4/model/rdf/Hash;Lokio/ByteString;)V
	public final fun component1 ()Lnet/navatwo/kaff4/model/rdf/Aff4RdfModel;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun component4 ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun copy (Lnet/navatwo/kaff4/model/rdf/Aff4RdfModel;Ljava/lang/String;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;)Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result$FailedHash;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result$FailedHash;Lnet/navatwo/kaff4/model/rdf/Aff4RdfModel;Ljava/lang/String;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result$FailedHash;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActualHash ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun getExpectedHash ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun getName ()Ljava/lang/String;
	public final fun getStream ()Lnet/navatwo/kaff4/model/rdf/Aff4RdfModel;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/VerifiableStreamProvider$Result$Success : net/navatwo/kaff4/model/VerifiableStreamProvider$Result {
	public static final field INSTANCE Lnet/navatwo/kaff4/model/VerifiableStreamProvider$Result$Success;
	public fun getFailedHashes ()Ljava/util/Collection;
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/dialect/Aff4LogicalStandardToolDialect : net/navatwo/kaff4/model/dialect/ToolDialect {
	public fun getTypeResolver ()Lnet/navatwo/kaff4/model/dialect/DialectTypeResolver;
	public fun isApplicable (Lnet/navatwo/kaff4/model/Aff4Container$ToolMetadata;)Z
}

public final class net/navatwo/kaff4/model/dialect/Aff4LogicalStandardToolDialect$Module : net/navatwo/guice/KAff4AbstractModule {
	public static final field INSTANCE Lnet/navatwo/kaff4/model/dialect/Aff4LogicalStandardToolDialect$Module;
}

public abstract interface annotation class net/navatwo/kaff4/model/dialect/Aff4LogicalStandardToolDialect$RdfStandardType : java/lang/annotation/Annotation {
	public abstract fun rdfType ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/Aff4ImagingOperation : java/lang/Enum {
	public static final field CAPTURE Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;
	public static fun valueOf (Ljava/lang/String;)Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;
	public static fun values ()[Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;
}

public abstract interface class net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels : net/navatwo/kaff4/model/rdf/Aff4RdfModel {
}

public final class net/navatwo/kaff4/model/rdf/Aff4RdfModelFeatureModule : net/navatwo/kaff4/api/KAff4FeatureModule {
	public static final field INSTANCE Lnet/navatwo/kaff4/model/rdf/Aff4RdfModelFeatureModule;
}

public final class net/navatwo/kaff4/model/rdf/Aff4TimeSource : java/lang/Enum {
	public static final field SINK Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;
	public static fun valueOf (Ljava/lang/String;)Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;
	public static fun values ()[Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;
}

public final class net/navatwo/kaff4/model/rdf/BlockHashes : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Hash;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Hash;)Lnet/navatwo/kaff4/model/rdf/BlockHashes;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/BlockHashes;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Hash;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/BlockHashes;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getForHashType ()Lnet/navatwo/kaff4/model/rdf/HashType;
	public final fun getHash ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/CaseDetails : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;)V
	public synthetic fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/util/Set;
	public final fun component6 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;)Lnet/navatwo/kaff4/model/rdf/CaseDetails;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/CaseDetails;Lorg/eclipse/rdf4j/model/IRI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/CaseDetails;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getCaseDescription ()Ljava/lang/String;
	public final fun getCaseName ()Ljava/lang/String;
	public final fun getExaminer ()Ljava/lang/String;
	public final fun getStored ()Ljava/util/Set;
	public final fun getTarget ()Lorg/eclipse/rdf4j/model/IRI;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/CaseNotes : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Ljava/time/ZonedDateTime;)V
	public synthetic fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Ljava/time/ZonedDateTime;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/util/Set;
	public final fun component7 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component8 ()Ljava/time/ZonedDateTime;
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Ljava/time/ZonedDateTime;)Lnet/navatwo/kaff4/model/rdf/CaseNotes;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/CaseNotes;Lorg/eclipse/rdf4j/model/IRI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Ljava/time/ZonedDateTime;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/CaseNotes;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getCaseNumber ()Ljava/lang/String;
	public final fun getEvidenceNumber ()Ljava/lang/String;
	public final fun getExaminer ()Ljava/lang/String;
	public final fun getNotes ()Ljava/lang/String;
	public final fun getStored ()Ljava/util/Set;
	public final fun getTarget ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getTimestamp ()Ljava/time/ZonedDateTime;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/DiskImage : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;JIJLjava/lang/String;Ljava/lang/String;ILjava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Ljava/lang/String;
	public final fun component12 ()Ljava/lang/String;
	public final fun component13 ()Ljava/lang/String;
	public final fun component14 ()Ljava/lang/String;
	public final fun component15 ()Ljava/lang/String;
	public final fun component2 ()J
	public final fun component3 ()I
	public final fun component4 ()J
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()I
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()I
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;JIJLjava/lang/String;Ljava/lang/String;ILjava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/navatwo/kaff4/model/rdf/DiskImage;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/DiskImage;Lorg/eclipse/rdf4j/model/IRI;JIJLjava/lang/String;Ljava/lang/String;ILjava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/DiskImage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAcquisitionCompletionState ()Ljava/lang/String;
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getBlockSize ()I
	public final fun getDiskDeviceName ()Ljava/lang/String;
	public final fun getDiskDeviceRole ()I
	public final fun getDiskDeviceType ()Ljava/lang/String;
	public final fun getDiskFirmware ()Ljava/lang/String;
	public final fun getDiskInterfaceType ()Ljava/lang/String;
	public final fun getDiskMake ()Ljava/lang/String;
	public final fun getDiskModel ()Ljava/lang/String;
	public final fun getDiskNumberOfPartitions ()I
	public final fun getDiskPartitionTableType ()Ljava/lang/String;
	public final fun getDiskSerial ()Ljava/lang/String;
	public final fun getSectorCount ()J
	public final fun getSize ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/FileImage : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;Lokio/Path;JLjava/time/ZonedDateTime;Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;)V
	public synthetic fun <init> (Lorg/eclipse/rdf4j/model/IRI;Lokio/Path;JLjava/time/ZonedDateTime;Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()Lokio/Path;
	public final fun component3 ()J
	public final fun component4 ()Ljava/time/ZonedDateTime;
	public final fun component5 ()Ljava/time/ZonedDateTime;
	public final fun component6 ()Ljava/time/ZonedDateTime;
	public final fun component7 ()Ljava/time/ZonedDateTime;
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;Lokio/Path;JLjava/time/ZonedDateTime;Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;)Lnet/navatwo/kaff4/model/rdf/FileImage;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/FileImage;Lorg/eclipse/rdf4j/model/IRI;Lokio/Path;JLjava/time/ZonedDateTime;Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/FileImage;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getBirthTime ()Ljava/time/ZonedDateTime;
	public final fun getLastAccessed ()Ljava/time/ZonedDateTime;
	public final fun getLastWritten ()Ljava/time/ZonedDateTime;
	public final fun getOriginalFileName ()Lokio/Path;
	public final fun getRecordChanged ()Ljava/time/ZonedDateTime;
	public final fun getSize ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class net/navatwo/kaff4/model/rdf/Hash {
	public static final field Companion Lnet/navatwo/kaff4/model/rdf/Hash$Companion;
	public synthetic fun <init> (Lnet/navatwo/kaff4/model/rdf/HashType;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getHashType ()Lnet/navatwo/kaff4/model/rdf/HashType;
	public final fun getName ()Ljava/lang/String;
	public abstract fun getValue ()Lokio/ByteString;
}

public final class net/navatwo/kaff4/model/rdf/Hash$Companion {
	public final fun fromLiteral (Lorg/eclipse/rdf4j/model/Literal;)Lnet/navatwo/kaff4/model/rdf/Hash;
}

public final class net/navatwo/kaff4/model/rdf/Hash$Md5 : net/navatwo/kaff4/model/rdf/Hash {
	public static final field Companion Lnet/navatwo/kaff4/model/rdf/Hash$Md5$Companion;
	public fun <init> (Lokio/ByteString;)V
	public final fun component1 ()Lokio/ByteString;
	public final fun copy (Lokio/ByteString;)Lnet/navatwo/kaff4/model/rdf/Hash$Md5;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/Hash$Md5;Lokio/ByteString;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/Hash$Md5;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Lokio/ByteString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/Hash$Md5$Companion {
}

public final class net/navatwo/kaff4/model/rdf/Hash$Sha1 : net/navatwo/kaff4/model/rdf/Hash {
	public static final field Companion Lnet/navatwo/kaff4/model/rdf/Hash$Sha1$Companion;
	public fun <init> (Lokio/ByteString;)V
	public final fun component1 ()Lokio/ByteString;
	public final fun copy (Lokio/ByteString;)Lnet/navatwo/kaff4/model/rdf/Hash$Sha1;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/Hash$Sha1;Lokio/ByteString;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/Hash$Sha1;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Lokio/ByteString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/Hash$Sha1$Companion {
}

public final class net/navatwo/kaff4/model/rdf/Hash$Sha256 : net/navatwo/kaff4/model/rdf/Hash {
	public static final field Companion Lnet/navatwo/kaff4/model/rdf/Hash$Sha256$Companion;
	public fun <init> (Lokio/ByteString;)V
	public final fun component1 ()Lokio/ByteString;
	public final fun copy (Lokio/ByteString;)Lnet/navatwo/kaff4/model/rdf/Hash$Sha256;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/Hash$Sha256;Lokio/ByteString;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/Hash$Sha256;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Lokio/ByteString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/Hash$Sha256$Companion {
}

public final class net/navatwo/kaff4/model/rdf/Hash$Sha512 : net/navatwo/kaff4/model/rdf/Hash {
	public static final field Companion Lnet/navatwo/kaff4/model/rdf/Hash$Sha512$Companion;
	public fun <init> (Lokio/ByteString;)V
	public final fun component1 ()Lokio/ByteString;
	public final fun copy (Lokio/ByteString;)Lnet/navatwo/kaff4/model/rdf/Hash$Sha512;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/Hash$Sha512;Lokio/ByteString;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/Hash$Sha512;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Lokio/ByteString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/Hash$Sha512$Companion {
}

public final class net/navatwo/kaff4/model/rdf/HashKt {
	public static final fun hash (Lokio/ByteString;Lnet/navatwo/kaff4/model/rdf/HashType;)Lokio/ByteString;
}

public final class net/navatwo/kaff4/model/rdf/HashType : java/lang/Enum {
	public static final field MD5 Lnet/navatwo/kaff4/model/rdf/HashType;
	public static final field SHA1 Lnet/navatwo/kaff4/model/rdf/HashType;
	public static final field SHA256 Lnet/navatwo/kaff4/model/rdf/HashType;
	public static final field SHA512 Lnet/navatwo/kaff4/model/rdf/HashType;
	public final fun getByteCount ()I
	public final fun value (Lokio/ByteString;)Lnet/navatwo/kaff4/model/rdf/Hash;
	public static fun valueOf (Ljava/lang/String;)Lnet/navatwo/kaff4/model/rdf/HashType;
	public static fun values ()[Lnet/navatwo/kaff4/model/rdf/HashType;
}

public final class net/navatwo/kaff4/model/rdf/Image : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;J)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()J
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;J)Lnet/navatwo/kaff4/model/rdf/Image;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/Image;Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;JILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/Image;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getDataStreams ()Ljava/util/Set;
	public final fun getSize ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/ImageStream : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels, net/navatwo/kaff4/model/rdf/StoredRdfModel {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;IIJLnet/navatwo/kaff4/model/rdf/CompressionMethod;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;I)V
	public synthetic fun <init> (Lorg/eclipse/rdf4j/model/IRI;IIJLnet/navatwo/kaff4/model/rdf/CompressionMethod;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bevySize (I)J
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component10 ()Ljava/util/Set;
	public final fun component11 ()I
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()J
	public final fun component5 ()Lnet/navatwo/kaff4/model/rdf/CompressionMethod;
	public final fun component6 ()Ljava/util/Set;
	public final fun component7 ()Ljava/util/Set;
	public final fun component8 ()Ljava/util/Set;
	public final fun component9 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;IIJLnet/navatwo/kaff4/model/rdf/CompressionMethod;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;I)Lnet/navatwo/kaff4/model/rdf/ImageStream;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/ImageStream;Lorg/eclipse/rdf4j/model/IRI;IIJLnet/navatwo/kaff4/model/rdf/CompressionMethod;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;IILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/ImageStream;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getBevyCount ()I
	public final fun getBevyMaxSize ()J
	public final fun getChunkSize ()I
	public final fun getChunksInSegment ()I
	public final fun getCompressionMethod ()Lnet/navatwo/kaff4/model/rdf/CompressionMethod;
	public final fun getImageStreamHashes ()Ljava/util/Set;
	public final fun getImageStreamIndexHashes ()Ljava/util/Set;
	public final fun getLastBevyIndex ()I
	public final fun getLastBevySize ()J
	public final fun getLinearHashes ()Ljava/util/Set;
	public final fun getSize ()J
	public fun getStored ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getTargets ()Ljava/util/Set;
	public final fun getVersion ()I
	public fun hashCode ()I
	public final fun queryBlockHashes (Lnet/navatwo/kaff4/model/Aff4Model;)Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/MapStream : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels, net/navatwo/kaff4/model/rdf/StoredRdfModel {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;JLorg/eclipse/rdf4j/model/IRI;Lorg/eclipse/rdf4j/model/IRI;)V
	public synthetic fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;JLorg/eclipse/rdf4j/model/IRI;Lorg/eclipse/rdf4j/model/IRI;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component10 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component11 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component4 ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun component5 ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun component6 ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun component7 ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun component8 ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun component9 ()J
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;JLorg/eclipse/rdf4j/model/IRI;Lorg/eclipse/rdf4j/model/IRI;)Lnet/navatwo/kaff4/model/rdf/MapStream;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/MapStream;Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;Lnet/navatwo/kaff4/model/rdf/Hash;JLorg/eclipse/rdf4j/model/IRI;Lorg/eclipse/rdf4j/model/IRI;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/MapStream;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getBlockMapHash ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun getDependentStreams ()Ljava/util/Set;
	public final fun getIdxPath ()Lokio/Path;
	public final fun getMapGapDefaultStream ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getMapHash ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun getMapIdxHash ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun getMapPath ()Lokio/Path;
	public final fun getMapPathHash ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun getMapPathPath ()Lokio/Path;
	public final fun getMapPointHash ()Lnet/navatwo/kaff4/model/rdf/Hash;
	public final fun getSize ()J
	public fun getStored ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getTarget ()Lorg/eclipse/rdf4j/model/IRI;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/NoneCompressionMethodKt {
	public static final fun getNone (Lnet/navatwo/kaff4/model/rdf/CompressionMethod$Companion;)Lnet/navatwo/kaff4/model/rdf/CompressionMethod;
}

public final class net/navatwo/kaff4/model/rdf/Rdf4JExtensionsKt {
	public static final fun toAff4Path (Lorg/eclipse/rdf4j/model/IRI;Lorg/eclipse/rdf4j/model/IRI;)Lokio/Path;
}

public final class net/navatwo/kaff4/model/rdf/TimeStamps : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/time/ZonedDateTime;Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;Ljava/time/ZonedDateTime;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;)V
	public synthetic fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/time/ZonedDateTime;Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;Ljava/time/ZonedDateTime;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()Ljava/time/ZonedDateTime;
	public final fun component3 ()Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;
	public final fun component4 ()Ljava/time/ZonedDateTime;
	public final fun component5 ()Ljava/util/Set;
	public final fun component6 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component7 ()Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;Ljava/time/ZonedDateTime;Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;Ljava/time/ZonedDateTime;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;)Lnet/navatwo/kaff4/model/rdf/TimeStamps;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/TimeStamps;Lorg/eclipse/rdf4j/model/IRI;Ljava/time/ZonedDateTime;Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;Ljava/time/ZonedDateTime;Ljava/util/Set;Lorg/eclipse/rdf4j/model/IRI;Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/TimeStamps;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getEndTime ()Ljava/time/ZonedDateTime;
	public final fun getOperation ()Lnet/navatwo/kaff4/model/rdf/Aff4ImagingOperation;
	public final fun getStartTime ()Ljava/time/ZonedDateTime;
	public final fun getStored ()Ljava/util/Set;
	public final fun getTarget ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getTimeSource ()Lnet/navatwo/kaff4/model/rdf/Aff4TimeSource;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/ValueFactoryArnExtensionsKt {
	public static final fun createArn (Lorg/eclipse/rdf4j/model/ValueFactory;Ljava/lang/String;)Lorg/eclipse/rdf4j/model/IRI;
	public static final fun createArn (Lorg/eclipse/rdf4j/model/ValueFactory;Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/rdf4j/model/IRI;
}

public final class net/navatwo/kaff4/model/rdf/ZipSegment : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels, net/navatwo/kaff4/model/rdf/StoredRdfModel {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;JLjava/util/Set;Lorg/eclipse/rdf4j/model/IRI;)V
	public synthetic fun <init> (Lorg/eclipse/rdf4j/model/IRI;JLjava/util/Set;Lorg/eclipse/rdf4j/model/IRI;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()J
	public final fun component3 ()Ljava/util/Set;
	public final fun component4 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;JLjava/util/Set;Lorg/eclipse/rdf4j/model/IRI;)Lnet/navatwo/kaff4/model/rdf/ZipSegment;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/ZipSegment;Lorg/eclipse/rdf4j/model/IRI;JLjava/util/Set;Lorg/eclipse/rdf4j/model/IRI;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/ZipSegment;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getLinearHashes ()Ljava/util/Set;
	public final fun getSegmentPath ()Lokio/Path;
	public final fun getSize ()J
	public fun getStored ()Lorg/eclipse/rdf4j/model/IRI;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class net/navatwo/kaff4/model/rdf/ZipVolume : net/navatwo/kaff4/model/rdf/Aff4RdfBaseModels {
	public fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;Ljava/time/ZonedDateTime;Lorg/eclipse/rdf4j/model/Resource;Lokio/Path;)V
	public synthetic fun <init> (Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;Ljava/time/ZonedDateTime;Lorg/eclipse/rdf4j/model/Resource;Lokio/Path;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Ljava/time/ZonedDateTime;
	public final fun component4 ()Lorg/eclipse/rdf4j/model/Resource;
	public final fun component5 ()Lokio/Path;
	public final fun copy (Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;Ljava/time/ZonedDateTime;Lorg/eclipse/rdf4j/model/Resource;Lokio/Path;)Lnet/navatwo/kaff4/model/rdf/ZipVolume;
	public static synthetic fun copy$default (Lnet/navatwo/kaff4/model/rdf/ZipVolume;Lorg/eclipse/rdf4j/model/IRI;Ljava/util/Set;Ljava/time/ZonedDateTime;Lorg/eclipse/rdf4j/model/Resource;Lokio/Path;ILjava/lang/Object;)Lnet/navatwo/kaff4/model/rdf/ZipVolume;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArn ()Lorg/eclipse/rdf4j/model/IRI;
	public final fun getContains ()Ljava/util/Set;
	public final fun getCreationTime ()Ljava/time/ZonedDateTime;
	public final fun getInterfaceType ()Lorg/eclipse/rdf4j/model/Resource;
	public final fun getStored ()Lokio/Path;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

